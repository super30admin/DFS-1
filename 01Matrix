class Solution {
public:
    int dirs[4][4] = {{0,1},{0,-1},{1,0},{-1,0}};
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n = mat.size();
        int m = mat[0].size();
        queue<pair<int,int>> q;
        for(int i = 0 ; i< n ; i++){
            for(int j = 0; j<m; j++){
                if(mat[i][j]==0){
                    q.push({i,j});
                }
                else{
                    mat[i][j] = -1;
                }
            }
        }
        int level = 0;
        while(!q.empty()){
            int size = q.size();
              level++;
            for(int i = 0 ; i<size; i++){
                int r = q.front().first;
                int c = q.front().second;
              
                q.pop();
        
                    for(auto dir : dirs){
                    int nr = r + dir[0];
                    int nc = c + dir[1];
                
                    if(nr>=0 && nr<n && nc>=0 && nc <m && mat[nr][nc] == -1 ){
                        mat[nr][nc] = level;
                        q.push({nr,nc});
                    }
            }
           }
        }
    return mat;
    }
};
