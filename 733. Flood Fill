Time complexity: O(mn)
Space complexity: O(mn)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        
        //Base case
        if(image == null || image.length==0 || image[0].length==0 || image[sr][sc]==newColor)
            return image;
        
        fill(image, sr, sc, newColor, image[sr][sc]);
        
        return image;
    }
    int [][] dirs = {{0,1},{0,-1},{1,0},{-1,0}};
    
    private void fill(int[][] image, int r, int c, int newColor, int source_color){
        
        image[r][c]=newColor;
        int m= image.length;
        int n = image[0].length;
        
        for(int[] dir:dirs){ 
            int row = r + dir[0];
            int col = c + dir[1];
            
            if(row>=0 && row<m && col>=0 && col<n && image[row][col]==source_color){
                image[row][col]=newColor;
                fill(image, row, col, newColor, source_color);
            }
        }
    }
}
