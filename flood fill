// Time complexity: O(mn) // number of rows * number of cols
//Space complexity: O(mn)
class Solution {
        int color;
        int newColor;
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
         this.color = image[sr][sc];
         this.newColor = newColor;
        if(newColor == color) return image;
        
        dfs(image, sr, sc);
        
        return image;
    }
    
    public void dfs(int[][] image, int row, int col){
        
        if(row < 0 || col < 0 || row == image.length || col == image[0].length || image[row][col] != color)
            return;
        
        image[row][col] = newColor;
        
        dfs(image, row+1, col);
        dfs(image, row, col+1);
        dfs(image, row-1, col);
        dfs(image, row, col-1);
    }
}
