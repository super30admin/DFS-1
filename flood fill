#time complexity: O(m*n)
#space complexity: O(m*n)
#did it run on leetcode: yes
class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:
        curr = image[sr][sc]
        n = len(image)
        m = len(image[0])
        def dfs(i,j):
            if 0 <= i < n and 0 <= j < m and image[i][j]==curr and image[i][j]!=color:
                image[i][j]=color
                dfs(i+1,j)
                dfs(i-1,j)
                dfs(i,j+1)
                dfs(i,j-1)
        dfs(sr,sc)
        return image
