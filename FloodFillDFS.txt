[200~/** Time Complexity - O(N)
Space Complexity - O(N)
 */
 class Solution {
     
         public int[][] floodFill(int[][] image, int sr, int sc, int color) {
	         
		         if (image[sr][sc] == color) {
			             return image;
				             }

					             int m = image.length;
						             int n = image[0].length;
							             dfs(image, image[sr][sc], color, sr, sc, m, n);
								             return image;
									         }

										     private void dfs(int[][] image, int origColor, int color, int r, int c, int m, int n) {
										             if (r <0 || c <0 || r>=m || c >=n) {
											                  return;
													           }
														            if (image[r][c] != origColor) {
															                 return;
																	          }
																		          image[r][c] = color;
																			          dfs(image, origColor, color, r-1, c, m, n);
																				          dfs(image, origColor, color, r+1, c, m, n);
																					          dfs(image, origColor, color, r, c-1, m, n);
																						          dfs(image, origColor, color, r, c+1, m, n);
																							      }
																							      }
